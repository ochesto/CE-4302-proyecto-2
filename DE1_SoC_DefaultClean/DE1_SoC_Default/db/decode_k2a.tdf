--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone V" LPM_DECODES=22 LPM_WIDTH=5 data eq
--VERSION_BEGIN 18.1 cbx_cycloneii 2018:09:12:13:04:24:SJ cbx_lpm_add_sub 2018:09:12:13:04:24:SJ cbx_lpm_compare 2018:09:12:13:04:24:SJ cbx_lpm_decode 2018:09:12:13:04:24:SJ cbx_mgl 2018:09:12:13:10:36:SJ cbx_nadder 2018:09:12:13:04:24:SJ cbx_stratix 2018:09:12:13:04:24:SJ cbx_stratixii 2018:09:12:13:04:24:SJ  VERSION_END


-- Copyright (C) 2018  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details.



--synthesis_resources = lut 36 
SUBDESIGN decode_k2a
( 
	data[4..0]	:	input;
	eq[21..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	eq_node[21..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode2868w[2..0]	: WIRE;
	w_anode2882w[3..0]	: WIRE;
	w_anode2899w[3..0]	: WIRE;
	w_anode2909w[3..0]	: WIRE;
	w_anode2919w[3..0]	: WIRE;
	w_anode2929w[3..0]	: WIRE;
	w_anode2939w[3..0]	: WIRE;
	w_anode2949w[3..0]	: WIRE;
	w_anode2959w[3..0]	: WIRE;
	w_anode2971w[2..0]	: WIRE;
	w_anode2981w[3..0]	: WIRE;
	w_anode2992w[3..0]	: WIRE;
	w_anode3002w[3..0]	: WIRE;
	w_anode3012w[3..0]	: WIRE;
	w_anode3022w[3..0]	: WIRE;
	w_anode3032w[3..0]	: WIRE;
	w_anode3042w[3..0]	: WIRE;
	w_anode3052w[3..0]	: WIRE;
	w_anode3063w[2..0]	: WIRE;
	w_anode3073w[3..0]	: WIRE;
	w_anode3084w[3..0]	: WIRE;
	w_anode3094w[3..0]	: WIRE;
	w_anode3104w[3..0]	: WIRE;
	w_anode3114w[3..0]	: WIRE;
	w_anode3124w[3..0]	: WIRE;
	w_anode3134w[3..0]	: WIRE;
	w_anode3144w[3..0]	: WIRE;
	w_anode3155w[2..0]	: WIRE;
	w_anode3165w[3..0]	: WIRE;
	w_anode3176w[3..0]	: WIRE;
	w_anode3186w[3..0]	: WIRE;
	w_anode3196w[3..0]	: WIRE;
	w_anode3206w[3..0]	: WIRE;
	w_anode3216w[3..0]	: WIRE;
	w_anode3226w[3..0]	: WIRE;
	w_anode3236w[3..0]	: WIRE;
	w_data2866w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	eq[] = eq_node[];
	eq_node[21..0] = eq_wire[21..0];
	eq_wire[] = ( ( w_anode3236w[3..3], w_anode3226w[3..3], w_anode3216w[3..3], w_anode3206w[3..3], w_anode3196w[3..3], w_anode3186w[3..3], w_anode3176w[3..3], w_anode3165w[3..3]), ( w_anode3144w[3..3], w_anode3134w[3..3], w_anode3124w[3..3], w_anode3114w[3..3], w_anode3104w[3..3], w_anode3094w[3..3], w_anode3084w[3..3], w_anode3073w[3..3]), ( w_anode3052w[3..3], w_anode3042w[3..3], w_anode3032w[3..3], w_anode3022w[3..3], w_anode3012w[3..3], w_anode3002w[3..3], w_anode2992w[3..3], w_anode2981w[3..3]), ( w_anode2959w[3..3], w_anode2949w[3..3], w_anode2939w[3..3], w_anode2929w[3..3], w_anode2919w[3..3], w_anode2909w[3..3], w_anode2899w[3..3], w_anode2882w[3..3]));
	w_anode2868w[] = ( (w_anode2868w[1..1] & (! data_wire[4..4])), (w_anode2868w[0..0] & (! data_wire[3..3])), B"1");
	w_anode2882w[] = ( (w_anode2882w[2..2] & (! w_data2866w[2..2])), (w_anode2882w[1..1] & (! w_data2866w[1..1])), (w_anode2882w[0..0] & (! w_data2866w[0..0])), w_anode2868w[2..2]);
	w_anode2899w[] = ( (w_anode2899w[2..2] & (! w_data2866w[2..2])), (w_anode2899w[1..1] & (! w_data2866w[1..1])), (w_anode2899w[0..0] & w_data2866w[0..0]), w_anode2868w[2..2]);
	w_anode2909w[] = ( (w_anode2909w[2..2] & (! w_data2866w[2..2])), (w_anode2909w[1..1] & w_data2866w[1..1]), (w_anode2909w[0..0] & (! w_data2866w[0..0])), w_anode2868w[2..2]);
	w_anode2919w[] = ( (w_anode2919w[2..2] & (! w_data2866w[2..2])), (w_anode2919w[1..1] & w_data2866w[1..1]), (w_anode2919w[0..0] & w_data2866w[0..0]), w_anode2868w[2..2]);
	w_anode2929w[] = ( (w_anode2929w[2..2] & w_data2866w[2..2]), (w_anode2929w[1..1] & (! w_data2866w[1..1])), (w_anode2929w[0..0] & (! w_data2866w[0..0])), w_anode2868w[2..2]);
	w_anode2939w[] = ( (w_anode2939w[2..2] & w_data2866w[2..2]), (w_anode2939w[1..1] & (! w_data2866w[1..1])), (w_anode2939w[0..0] & w_data2866w[0..0]), w_anode2868w[2..2]);
	w_anode2949w[] = ( (w_anode2949w[2..2] & w_data2866w[2..2]), (w_anode2949w[1..1] & w_data2866w[1..1]), (w_anode2949w[0..0] & (! w_data2866w[0..0])), w_anode2868w[2..2]);
	w_anode2959w[] = ( (w_anode2959w[2..2] & w_data2866w[2..2]), (w_anode2959w[1..1] & w_data2866w[1..1]), (w_anode2959w[0..0] & w_data2866w[0..0]), w_anode2868w[2..2]);
	w_anode2971w[] = ( (w_anode2971w[1..1] & (! data_wire[4..4])), (w_anode2971w[0..0] & data_wire[3..3]), B"1");
	w_anode2981w[] = ( (w_anode2981w[2..2] & (! w_data2866w[2..2])), (w_anode2981w[1..1] & (! w_data2866w[1..1])), (w_anode2981w[0..0] & (! w_data2866w[0..0])), w_anode2971w[2..2]);
	w_anode2992w[] = ( (w_anode2992w[2..2] & (! w_data2866w[2..2])), (w_anode2992w[1..1] & (! w_data2866w[1..1])), (w_anode2992w[0..0] & w_data2866w[0..0]), w_anode2971w[2..2]);
	w_anode3002w[] = ( (w_anode3002w[2..2] & (! w_data2866w[2..2])), (w_anode3002w[1..1] & w_data2866w[1..1]), (w_anode3002w[0..0] & (! w_data2866w[0..0])), w_anode2971w[2..2]);
	w_anode3012w[] = ( (w_anode3012w[2..2] & (! w_data2866w[2..2])), (w_anode3012w[1..1] & w_data2866w[1..1]), (w_anode3012w[0..0] & w_data2866w[0..0]), w_anode2971w[2..2]);
	w_anode3022w[] = ( (w_anode3022w[2..2] & w_data2866w[2..2]), (w_anode3022w[1..1] & (! w_data2866w[1..1])), (w_anode3022w[0..0] & (! w_data2866w[0..0])), w_anode2971w[2..2]);
	w_anode3032w[] = ( (w_anode3032w[2..2] & w_data2866w[2..2]), (w_anode3032w[1..1] & (! w_data2866w[1..1])), (w_anode3032w[0..0] & w_data2866w[0..0]), w_anode2971w[2..2]);
	w_anode3042w[] = ( (w_anode3042w[2..2] & w_data2866w[2..2]), (w_anode3042w[1..1] & w_data2866w[1..1]), (w_anode3042w[0..0] & (! w_data2866w[0..0])), w_anode2971w[2..2]);
	w_anode3052w[] = ( (w_anode3052w[2..2] & w_data2866w[2..2]), (w_anode3052w[1..1] & w_data2866w[1..1]), (w_anode3052w[0..0] & w_data2866w[0..0]), w_anode2971w[2..2]);
	w_anode3063w[] = ( (w_anode3063w[1..1] & data_wire[4..4]), (w_anode3063w[0..0] & (! data_wire[3..3])), B"1");
	w_anode3073w[] = ( (w_anode3073w[2..2] & (! w_data2866w[2..2])), (w_anode3073w[1..1] & (! w_data2866w[1..1])), (w_anode3073w[0..0] & (! w_data2866w[0..0])), w_anode3063w[2..2]);
	w_anode3084w[] = ( (w_anode3084w[2..2] & (! w_data2866w[2..2])), (w_anode3084w[1..1] & (! w_data2866w[1..1])), (w_anode3084w[0..0] & w_data2866w[0..0]), w_anode3063w[2..2]);
	w_anode3094w[] = ( (w_anode3094w[2..2] & (! w_data2866w[2..2])), (w_anode3094w[1..1] & w_data2866w[1..1]), (w_anode3094w[0..0] & (! w_data2866w[0..0])), w_anode3063w[2..2]);
	w_anode3104w[] = ( (w_anode3104w[2..2] & (! w_data2866w[2..2])), (w_anode3104w[1..1] & w_data2866w[1..1]), (w_anode3104w[0..0] & w_data2866w[0..0]), w_anode3063w[2..2]);
	w_anode3114w[] = ( (w_anode3114w[2..2] & w_data2866w[2..2]), (w_anode3114w[1..1] & (! w_data2866w[1..1])), (w_anode3114w[0..0] & (! w_data2866w[0..0])), w_anode3063w[2..2]);
	w_anode3124w[] = ( (w_anode3124w[2..2] & w_data2866w[2..2]), (w_anode3124w[1..1] & (! w_data2866w[1..1])), (w_anode3124w[0..0] & w_data2866w[0..0]), w_anode3063w[2..2]);
	w_anode3134w[] = ( (w_anode3134w[2..2] & w_data2866w[2..2]), (w_anode3134w[1..1] & w_data2866w[1..1]), (w_anode3134w[0..0] & (! w_data2866w[0..0])), w_anode3063w[2..2]);
	w_anode3144w[] = ( (w_anode3144w[2..2] & w_data2866w[2..2]), (w_anode3144w[1..1] & w_data2866w[1..1]), (w_anode3144w[0..0] & w_data2866w[0..0]), w_anode3063w[2..2]);
	w_anode3155w[] = ( (w_anode3155w[1..1] & data_wire[4..4]), (w_anode3155w[0..0] & data_wire[3..3]), B"1");
	w_anode3165w[] = ( (w_anode3165w[2..2] & (! w_data2866w[2..2])), (w_anode3165w[1..1] & (! w_data2866w[1..1])), (w_anode3165w[0..0] & (! w_data2866w[0..0])), w_anode3155w[2..2]);
	w_anode3176w[] = ( (w_anode3176w[2..2] & (! w_data2866w[2..2])), (w_anode3176w[1..1] & (! w_data2866w[1..1])), (w_anode3176w[0..0] & w_data2866w[0..0]), w_anode3155w[2..2]);
	w_anode3186w[] = ( (w_anode3186w[2..2] & (! w_data2866w[2..2])), (w_anode3186w[1..1] & w_data2866w[1..1]), (w_anode3186w[0..0] & (! w_data2866w[0..0])), w_anode3155w[2..2]);
	w_anode3196w[] = ( (w_anode3196w[2..2] & (! w_data2866w[2..2])), (w_anode3196w[1..1] & w_data2866w[1..1]), (w_anode3196w[0..0] & w_data2866w[0..0]), w_anode3155w[2..2]);
	w_anode3206w[] = ( (w_anode3206w[2..2] & w_data2866w[2..2]), (w_anode3206w[1..1] & (! w_data2866w[1..1])), (w_anode3206w[0..0] & (! w_data2866w[0..0])), w_anode3155w[2..2]);
	w_anode3216w[] = ( (w_anode3216w[2..2] & w_data2866w[2..2]), (w_anode3216w[1..1] & (! w_data2866w[1..1])), (w_anode3216w[0..0] & w_data2866w[0..0]), w_anode3155w[2..2]);
	w_anode3226w[] = ( (w_anode3226w[2..2] & w_data2866w[2..2]), (w_anode3226w[1..1] & w_data2866w[1..1]), (w_anode3226w[0..0] & (! w_data2866w[0..0])), w_anode3155w[2..2]);
	w_anode3236w[] = ( (w_anode3236w[2..2] & w_data2866w[2..2]), (w_anode3236w[1..1] & w_data2866w[1..1]), (w_anode3236w[0..0] & w_data2866w[0..0]), w_anode3155w[2..2]);
	w_data2866w[2..0] = data_wire[2..0];
END;
--VALID FILE
