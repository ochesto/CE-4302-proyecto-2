--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone V" LPM_DECODES=18 LPM_WIDTH=5 data eq
--VERSION_BEGIN 18.1 cbx_cycloneii 2018:09:12:13:04:24:SJ cbx_lpm_add_sub 2018:09:12:13:04:24:SJ cbx_lpm_compare 2018:09:12:13:04:24:SJ cbx_lpm_decode 2018:09:12:13:04:24:SJ cbx_mgl 2018:09:12:13:10:36:SJ cbx_nadder 2018:09:12:13:04:24:SJ cbx_stratix 2018:09:12:13:04:24:SJ cbx_stratixii 2018:09:12:13:04:24:SJ  VERSION_END


-- Copyright (C) 2018  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details.



--synthesis_resources = lut 36 
SUBDESIGN decode_p2a
( 
	data[4..0]	:	input;
	eq[17..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	eq_node[17..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode2349w[2..0]	: WIRE;
	w_anode2363w[3..0]	: WIRE;
	w_anode2380w[3..0]	: WIRE;
	w_anode2390w[3..0]	: WIRE;
	w_anode2400w[3..0]	: WIRE;
	w_anode2410w[3..0]	: WIRE;
	w_anode2420w[3..0]	: WIRE;
	w_anode2430w[3..0]	: WIRE;
	w_anode2440w[3..0]	: WIRE;
	w_anode2452w[2..0]	: WIRE;
	w_anode2462w[3..0]	: WIRE;
	w_anode2473w[3..0]	: WIRE;
	w_anode2483w[3..0]	: WIRE;
	w_anode2493w[3..0]	: WIRE;
	w_anode2503w[3..0]	: WIRE;
	w_anode2513w[3..0]	: WIRE;
	w_anode2523w[3..0]	: WIRE;
	w_anode2533w[3..0]	: WIRE;
	w_anode2544w[2..0]	: WIRE;
	w_anode2554w[3..0]	: WIRE;
	w_anode2565w[3..0]	: WIRE;
	w_anode2575w[3..0]	: WIRE;
	w_anode2585w[3..0]	: WIRE;
	w_anode2595w[3..0]	: WIRE;
	w_anode2605w[3..0]	: WIRE;
	w_anode2615w[3..0]	: WIRE;
	w_anode2625w[3..0]	: WIRE;
	w_anode2636w[2..0]	: WIRE;
	w_anode2646w[3..0]	: WIRE;
	w_anode2657w[3..0]	: WIRE;
	w_anode2667w[3..0]	: WIRE;
	w_anode2677w[3..0]	: WIRE;
	w_anode2687w[3..0]	: WIRE;
	w_anode2697w[3..0]	: WIRE;
	w_anode2707w[3..0]	: WIRE;
	w_anode2717w[3..0]	: WIRE;
	w_data2347w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	eq[] = eq_node[];
	eq_node[17..0] = eq_wire[17..0];
	eq_wire[] = ( ( w_anode2717w[3..3], w_anode2707w[3..3], w_anode2697w[3..3], w_anode2687w[3..3], w_anode2677w[3..3], w_anode2667w[3..3], w_anode2657w[3..3], w_anode2646w[3..3]), ( w_anode2625w[3..3], w_anode2615w[3..3], w_anode2605w[3..3], w_anode2595w[3..3], w_anode2585w[3..3], w_anode2575w[3..3], w_anode2565w[3..3], w_anode2554w[3..3]), ( w_anode2533w[3..3], w_anode2523w[3..3], w_anode2513w[3..3], w_anode2503w[3..3], w_anode2493w[3..3], w_anode2483w[3..3], w_anode2473w[3..3], w_anode2462w[3..3]), ( w_anode2440w[3..3], w_anode2430w[3..3], w_anode2420w[3..3], w_anode2410w[3..3], w_anode2400w[3..3], w_anode2390w[3..3], w_anode2380w[3..3], w_anode2363w[3..3]));
	w_anode2349w[] = ( (w_anode2349w[1..1] & (! data_wire[4..4])), (w_anode2349w[0..0] & (! data_wire[3..3])), B"1");
	w_anode2363w[] = ( (w_anode2363w[2..2] & (! w_data2347w[2..2])), (w_anode2363w[1..1] & (! w_data2347w[1..1])), (w_anode2363w[0..0] & (! w_data2347w[0..0])), w_anode2349w[2..2]);
	w_anode2380w[] = ( (w_anode2380w[2..2] & (! w_data2347w[2..2])), (w_anode2380w[1..1] & (! w_data2347w[1..1])), (w_anode2380w[0..0] & w_data2347w[0..0]), w_anode2349w[2..2]);
	w_anode2390w[] = ( (w_anode2390w[2..2] & (! w_data2347w[2..2])), (w_anode2390w[1..1] & w_data2347w[1..1]), (w_anode2390w[0..0] & (! w_data2347w[0..0])), w_anode2349w[2..2]);
	w_anode2400w[] = ( (w_anode2400w[2..2] & (! w_data2347w[2..2])), (w_anode2400w[1..1] & w_data2347w[1..1]), (w_anode2400w[0..0] & w_data2347w[0..0]), w_anode2349w[2..2]);
	w_anode2410w[] = ( (w_anode2410w[2..2] & w_data2347w[2..2]), (w_anode2410w[1..1] & (! w_data2347w[1..1])), (w_anode2410w[0..0] & (! w_data2347w[0..0])), w_anode2349w[2..2]);
	w_anode2420w[] = ( (w_anode2420w[2..2] & w_data2347w[2..2]), (w_anode2420w[1..1] & (! w_data2347w[1..1])), (w_anode2420w[0..0] & w_data2347w[0..0]), w_anode2349w[2..2]);
	w_anode2430w[] = ( (w_anode2430w[2..2] & w_data2347w[2..2]), (w_anode2430w[1..1] & w_data2347w[1..1]), (w_anode2430w[0..0] & (! w_data2347w[0..0])), w_anode2349w[2..2]);
	w_anode2440w[] = ( (w_anode2440w[2..2] & w_data2347w[2..2]), (w_anode2440w[1..1] & w_data2347w[1..1]), (w_anode2440w[0..0] & w_data2347w[0..0]), w_anode2349w[2..2]);
	w_anode2452w[] = ( (w_anode2452w[1..1] & (! data_wire[4..4])), (w_anode2452w[0..0] & data_wire[3..3]), B"1");
	w_anode2462w[] = ( (w_anode2462w[2..2] & (! w_data2347w[2..2])), (w_anode2462w[1..1] & (! w_data2347w[1..1])), (w_anode2462w[0..0] & (! w_data2347w[0..0])), w_anode2452w[2..2]);
	w_anode2473w[] = ( (w_anode2473w[2..2] & (! w_data2347w[2..2])), (w_anode2473w[1..1] & (! w_data2347w[1..1])), (w_anode2473w[0..0] & w_data2347w[0..0]), w_anode2452w[2..2]);
	w_anode2483w[] = ( (w_anode2483w[2..2] & (! w_data2347w[2..2])), (w_anode2483w[1..1] & w_data2347w[1..1]), (w_anode2483w[0..0] & (! w_data2347w[0..0])), w_anode2452w[2..2]);
	w_anode2493w[] = ( (w_anode2493w[2..2] & (! w_data2347w[2..2])), (w_anode2493w[1..1] & w_data2347w[1..1]), (w_anode2493w[0..0] & w_data2347w[0..0]), w_anode2452w[2..2]);
	w_anode2503w[] = ( (w_anode2503w[2..2] & w_data2347w[2..2]), (w_anode2503w[1..1] & (! w_data2347w[1..1])), (w_anode2503w[0..0] & (! w_data2347w[0..0])), w_anode2452w[2..2]);
	w_anode2513w[] = ( (w_anode2513w[2..2] & w_data2347w[2..2]), (w_anode2513w[1..1] & (! w_data2347w[1..1])), (w_anode2513w[0..0] & w_data2347w[0..0]), w_anode2452w[2..2]);
	w_anode2523w[] = ( (w_anode2523w[2..2] & w_data2347w[2..2]), (w_anode2523w[1..1] & w_data2347w[1..1]), (w_anode2523w[0..0] & (! w_data2347w[0..0])), w_anode2452w[2..2]);
	w_anode2533w[] = ( (w_anode2533w[2..2] & w_data2347w[2..2]), (w_anode2533w[1..1] & w_data2347w[1..1]), (w_anode2533w[0..0] & w_data2347w[0..0]), w_anode2452w[2..2]);
	w_anode2544w[] = ( (w_anode2544w[1..1] & data_wire[4..4]), (w_anode2544w[0..0] & (! data_wire[3..3])), B"1");
	w_anode2554w[] = ( (w_anode2554w[2..2] & (! w_data2347w[2..2])), (w_anode2554w[1..1] & (! w_data2347w[1..1])), (w_anode2554w[0..0] & (! w_data2347w[0..0])), w_anode2544w[2..2]);
	w_anode2565w[] = ( (w_anode2565w[2..2] & (! w_data2347w[2..2])), (w_anode2565w[1..1] & (! w_data2347w[1..1])), (w_anode2565w[0..0] & w_data2347w[0..0]), w_anode2544w[2..2]);
	w_anode2575w[] = ( (w_anode2575w[2..2] & (! w_data2347w[2..2])), (w_anode2575w[1..1] & w_data2347w[1..1]), (w_anode2575w[0..0] & (! w_data2347w[0..0])), w_anode2544w[2..2]);
	w_anode2585w[] = ( (w_anode2585w[2..2] & (! w_data2347w[2..2])), (w_anode2585w[1..1] & w_data2347w[1..1]), (w_anode2585w[0..0] & w_data2347w[0..0]), w_anode2544w[2..2]);
	w_anode2595w[] = ( (w_anode2595w[2..2] & w_data2347w[2..2]), (w_anode2595w[1..1] & (! w_data2347w[1..1])), (w_anode2595w[0..0] & (! w_data2347w[0..0])), w_anode2544w[2..2]);
	w_anode2605w[] = ( (w_anode2605w[2..2] & w_data2347w[2..2]), (w_anode2605w[1..1] & (! w_data2347w[1..1])), (w_anode2605w[0..0] & w_data2347w[0..0]), w_anode2544w[2..2]);
	w_anode2615w[] = ( (w_anode2615w[2..2] & w_data2347w[2..2]), (w_anode2615w[1..1] & w_data2347w[1..1]), (w_anode2615w[0..0] & (! w_data2347w[0..0])), w_anode2544w[2..2]);
	w_anode2625w[] = ( (w_anode2625w[2..2] & w_data2347w[2..2]), (w_anode2625w[1..1] & w_data2347w[1..1]), (w_anode2625w[0..0] & w_data2347w[0..0]), w_anode2544w[2..2]);
	w_anode2636w[] = ( (w_anode2636w[1..1] & data_wire[4..4]), (w_anode2636w[0..0] & data_wire[3..3]), B"1");
	w_anode2646w[] = ( (w_anode2646w[2..2] & (! w_data2347w[2..2])), (w_anode2646w[1..1] & (! w_data2347w[1..1])), (w_anode2646w[0..0] & (! w_data2347w[0..0])), w_anode2636w[2..2]);
	w_anode2657w[] = ( (w_anode2657w[2..2] & (! w_data2347w[2..2])), (w_anode2657w[1..1] & (! w_data2347w[1..1])), (w_anode2657w[0..0] & w_data2347w[0..0]), w_anode2636w[2..2]);
	w_anode2667w[] = ( (w_anode2667w[2..2] & (! w_data2347w[2..2])), (w_anode2667w[1..1] & w_data2347w[1..1]), (w_anode2667w[0..0] & (! w_data2347w[0..0])), w_anode2636w[2..2]);
	w_anode2677w[] = ( (w_anode2677w[2..2] & (! w_data2347w[2..2])), (w_anode2677w[1..1] & w_data2347w[1..1]), (w_anode2677w[0..0] & w_data2347w[0..0]), w_anode2636w[2..2]);
	w_anode2687w[] = ( (w_anode2687w[2..2] & w_data2347w[2..2]), (w_anode2687w[1..1] & (! w_data2347w[1..1])), (w_anode2687w[0..0] & (! w_data2347w[0..0])), w_anode2636w[2..2]);
	w_anode2697w[] = ( (w_anode2697w[2..2] & w_data2347w[2..2]), (w_anode2697w[1..1] & (! w_data2347w[1..1])), (w_anode2697w[0..0] & w_data2347w[0..0]), w_anode2636w[2..2]);
	w_anode2707w[] = ( (w_anode2707w[2..2] & w_data2347w[2..2]), (w_anode2707w[1..1] & w_data2347w[1..1]), (w_anode2707w[0..0] & (! w_data2347w[0..0])), w_anode2636w[2..2]);
	w_anode2717w[] = ( (w_anode2717w[2..2] & w_data2347w[2..2]), (w_anode2717w[1..1] & w_data2347w[1..1]), (w_anode2717w[0..0] & w_data2347w[0..0]), w_anode2636w[2..2]);
	w_data2347w[2..0] = data_wire[2..0];
END;
--VALID FILE
