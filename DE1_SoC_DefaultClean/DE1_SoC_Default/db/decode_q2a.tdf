--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone V" LPM_DECODES=19 LPM_WIDTH=5 data eq
--VERSION_BEGIN 18.1 cbx_cycloneii 2018:09:12:13:04:24:SJ cbx_lpm_add_sub 2018:09:12:13:04:24:SJ cbx_lpm_compare 2018:09:12:13:04:24:SJ cbx_lpm_decode 2018:09:12:13:04:24:SJ cbx_mgl 2018:09:12:13:10:36:SJ cbx_nadder 2018:09:12:13:04:24:SJ cbx_stratix 2018:09:12:13:04:24:SJ cbx_stratixii 2018:09:12:13:04:24:SJ  VERSION_END


-- Copyright (C) 2018  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details.



--synthesis_resources = lut 36 
SUBDESIGN decode_q2a
( 
	data[4..0]	:	input;
	eq[18..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	eq_node[18..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode2479w[2..0]	: WIRE;
	w_anode2493w[3..0]	: WIRE;
	w_anode2510w[3..0]	: WIRE;
	w_anode2520w[3..0]	: WIRE;
	w_anode2530w[3..0]	: WIRE;
	w_anode2540w[3..0]	: WIRE;
	w_anode2550w[3..0]	: WIRE;
	w_anode2560w[3..0]	: WIRE;
	w_anode2570w[3..0]	: WIRE;
	w_anode2582w[2..0]	: WIRE;
	w_anode2592w[3..0]	: WIRE;
	w_anode2603w[3..0]	: WIRE;
	w_anode2613w[3..0]	: WIRE;
	w_anode2623w[3..0]	: WIRE;
	w_anode2633w[3..0]	: WIRE;
	w_anode2643w[3..0]	: WIRE;
	w_anode2653w[3..0]	: WIRE;
	w_anode2663w[3..0]	: WIRE;
	w_anode2674w[2..0]	: WIRE;
	w_anode2684w[3..0]	: WIRE;
	w_anode2695w[3..0]	: WIRE;
	w_anode2705w[3..0]	: WIRE;
	w_anode2715w[3..0]	: WIRE;
	w_anode2725w[3..0]	: WIRE;
	w_anode2735w[3..0]	: WIRE;
	w_anode2745w[3..0]	: WIRE;
	w_anode2755w[3..0]	: WIRE;
	w_anode2766w[2..0]	: WIRE;
	w_anode2776w[3..0]	: WIRE;
	w_anode2787w[3..0]	: WIRE;
	w_anode2797w[3..0]	: WIRE;
	w_anode2807w[3..0]	: WIRE;
	w_anode2817w[3..0]	: WIRE;
	w_anode2827w[3..0]	: WIRE;
	w_anode2837w[3..0]	: WIRE;
	w_anode2847w[3..0]	: WIRE;
	w_data2477w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	eq[] = eq_node[];
	eq_node[18..0] = eq_wire[18..0];
	eq_wire[] = ( ( w_anode2847w[3..3], w_anode2837w[3..3], w_anode2827w[3..3], w_anode2817w[3..3], w_anode2807w[3..3], w_anode2797w[3..3], w_anode2787w[3..3], w_anode2776w[3..3]), ( w_anode2755w[3..3], w_anode2745w[3..3], w_anode2735w[3..3], w_anode2725w[3..3], w_anode2715w[3..3], w_anode2705w[3..3], w_anode2695w[3..3], w_anode2684w[3..3]), ( w_anode2663w[3..3], w_anode2653w[3..3], w_anode2643w[3..3], w_anode2633w[3..3], w_anode2623w[3..3], w_anode2613w[3..3], w_anode2603w[3..3], w_anode2592w[3..3]), ( w_anode2570w[3..3], w_anode2560w[3..3], w_anode2550w[3..3], w_anode2540w[3..3], w_anode2530w[3..3], w_anode2520w[3..3], w_anode2510w[3..3], w_anode2493w[3..3]));
	w_anode2479w[] = ( (w_anode2479w[1..1] & (! data_wire[4..4])), (w_anode2479w[0..0] & (! data_wire[3..3])), B"1");
	w_anode2493w[] = ( (w_anode2493w[2..2] & (! w_data2477w[2..2])), (w_anode2493w[1..1] & (! w_data2477w[1..1])), (w_anode2493w[0..0] & (! w_data2477w[0..0])), w_anode2479w[2..2]);
	w_anode2510w[] = ( (w_anode2510w[2..2] & (! w_data2477w[2..2])), (w_anode2510w[1..1] & (! w_data2477w[1..1])), (w_anode2510w[0..0] & w_data2477w[0..0]), w_anode2479w[2..2]);
	w_anode2520w[] = ( (w_anode2520w[2..2] & (! w_data2477w[2..2])), (w_anode2520w[1..1] & w_data2477w[1..1]), (w_anode2520w[0..0] & (! w_data2477w[0..0])), w_anode2479w[2..2]);
	w_anode2530w[] = ( (w_anode2530w[2..2] & (! w_data2477w[2..2])), (w_anode2530w[1..1] & w_data2477w[1..1]), (w_anode2530w[0..0] & w_data2477w[0..0]), w_anode2479w[2..2]);
	w_anode2540w[] = ( (w_anode2540w[2..2] & w_data2477w[2..2]), (w_anode2540w[1..1] & (! w_data2477w[1..1])), (w_anode2540w[0..0] & (! w_data2477w[0..0])), w_anode2479w[2..2]);
	w_anode2550w[] = ( (w_anode2550w[2..2] & w_data2477w[2..2]), (w_anode2550w[1..1] & (! w_data2477w[1..1])), (w_anode2550w[0..0] & w_data2477w[0..0]), w_anode2479w[2..2]);
	w_anode2560w[] = ( (w_anode2560w[2..2] & w_data2477w[2..2]), (w_anode2560w[1..1] & w_data2477w[1..1]), (w_anode2560w[0..0] & (! w_data2477w[0..0])), w_anode2479w[2..2]);
	w_anode2570w[] = ( (w_anode2570w[2..2] & w_data2477w[2..2]), (w_anode2570w[1..1] & w_data2477w[1..1]), (w_anode2570w[0..0] & w_data2477w[0..0]), w_anode2479w[2..2]);
	w_anode2582w[] = ( (w_anode2582w[1..1] & (! data_wire[4..4])), (w_anode2582w[0..0] & data_wire[3..3]), B"1");
	w_anode2592w[] = ( (w_anode2592w[2..2] & (! w_data2477w[2..2])), (w_anode2592w[1..1] & (! w_data2477w[1..1])), (w_anode2592w[0..0] & (! w_data2477w[0..0])), w_anode2582w[2..2]);
	w_anode2603w[] = ( (w_anode2603w[2..2] & (! w_data2477w[2..2])), (w_anode2603w[1..1] & (! w_data2477w[1..1])), (w_anode2603w[0..0] & w_data2477w[0..0]), w_anode2582w[2..2]);
	w_anode2613w[] = ( (w_anode2613w[2..2] & (! w_data2477w[2..2])), (w_anode2613w[1..1] & w_data2477w[1..1]), (w_anode2613w[0..0] & (! w_data2477w[0..0])), w_anode2582w[2..2]);
	w_anode2623w[] = ( (w_anode2623w[2..2] & (! w_data2477w[2..2])), (w_anode2623w[1..1] & w_data2477w[1..1]), (w_anode2623w[0..0] & w_data2477w[0..0]), w_anode2582w[2..2]);
	w_anode2633w[] = ( (w_anode2633w[2..2] & w_data2477w[2..2]), (w_anode2633w[1..1] & (! w_data2477w[1..1])), (w_anode2633w[0..0] & (! w_data2477w[0..0])), w_anode2582w[2..2]);
	w_anode2643w[] = ( (w_anode2643w[2..2] & w_data2477w[2..2]), (w_anode2643w[1..1] & (! w_data2477w[1..1])), (w_anode2643w[0..0] & w_data2477w[0..0]), w_anode2582w[2..2]);
	w_anode2653w[] = ( (w_anode2653w[2..2] & w_data2477w[2..2]), (w_anode2653w[1..1] & w_data2477w[1..1]), (w_anode2653w[0..0] & (! w_data2477w[0..0])), w_anode2582w[2..2]);
	w_anode2663w[] = ( (w_anode2663w[2..2] & w_data2477w[2..2]), (w_anode2663w[1..1] & w_data2477w[1..1]), (w_anode2663w[0..0] & w_data2477w[0..0]), w_anode2582w[2..2]);
	w_anode2674w[] = ( (w_anode2674w[1..1] & data_wire[4..4]), (w_anode2674w[0..0] & (! data_wire[3..3])), B"1");
	w_anode2684w[] = ( (w_anode2684w[2..2] & (! w_data2477w[2..2])), (w_anode2684w[1..1] & (! w_data2477w[1..1])), (w_anode2684w[0..0] & (! w_data2477w[0..0])), w_anode2674w[2..2]);
	w_anode2695w[] = ( (w_anode2695w[2..2] & (! w_data2477w[2..2])), (w_anode2695w[1..1] & (! w_data2477w[1..1])), (w_anode2695w[0..0] & w_data2477w[0..0]), w_anode2674w[2..2]);
	w_anode2705w[] = ( (w_anode2705w[2..2] & (! w_data2477w[2..2])), (w_anode2705w[1..1] & w_data2477w[1..1]), (w_anode2705w[0..0] & (! w_data2477w[0..0])), w_anode2674w[2..2]);
	w_anode2715w[] = ( (w_anode2715w[2..2] & (! w_data2477w[2..2])), (w_anode2715w[1..1] & w_data2477w[1..1]), (w_anode2715w[0..0] & w_data2477w[0..0]), w_anode2674w[2..2]);
	w_anode2725w[] = ( (w_anode2725w[2..2] & w_data2477w[2..2]), (w_anode2725w[1..1] & (! w_data2477w[1..1])), (w_anode2725w[0..0] & (! w_data2477w[0..0])), w_anode2674w[2..2]);
	w_anode2735w[] = ( (w_anode2735w[2..2] & w_data2477w[2..2]), (w_anode2735w[1..1] & (! w_data2477w[1..1])), (w_anode2735w[0..0] & w_data2477w[0..0]), w_anode2674w[2..2]);
	w_anode2745w[] = ( (w_anode2745w[2..2] & w_data2477w[2..2]), (w_anode2745w[1..1] & w_data2477w[1..1]), (w_anode2745w[0..0] & (! w_data2477w[0..0])), w_anode2674w[2..2]);
	w_anode2755w[] = ( (w_anode2755w[2..2] & w_data2477w[2..2]), (w_anode2755w[1..1] & w_data2477w[1..1]), (w_anode2755w[0..0] & w_data2477w[0..0]), w_anode2674w[2..2]);
	w_anode2766w[] = ( (w_anode2766w[1..1] & data_wire[4..4]), (w_anode2766w[0..0] & data_wire[3..3]), B"1");
	w_anode2776w[] = ( (w_anode2776w[2..2] & (! w_data2477w[2..2])), (w_anode2776w[1..1] & (! w_data2477w[1..1])), (w_anode2776w[0..0] & (! w_data2477w[0..0])), w_anode2766w[2..2]);
	w_anode2787w[] = ( (w_anode2787w[2..2] & (! w_data2477w[2..2])), (w_anode2787w[1..1] & (! w_data2477w[1..1])), (w_anode2787w[0..0] & w_data2477w[0..0]), w_anode2766w[2..2]);
	w_anode2797w[] = ( (w_anode2797w[2..2] & (! w_data2477w[2..2])), (w_anode2797w[1..1] & w_data2477w[1..1]), (w_anode2797w[0..0] & (! w_data2477w[0..0])), w_anode2766w[2..2]);
	w_anode2807w[] = ( (w_anode2807w[2..2] & (! w_data2477w[2..2])), (w_anode2807w[1..1] & w_data2477w[1..1]), (w_anode2807w[0..0] & w_data2477w[0..0]), w_anode2766w[2..2]);
	w_anode2817w[] = ( (w_anode2817w[2..2] & w_data2477w[2..2]), (w_anode2817w[1..1] & (! w_data2477w[1..1])), (w_anode2817w[0..0] & (! w_data2477w[0..0])), w_anode2766w[2..2]);
	w_anode2827w[] = ( (w_anode2827w[2..2] & w_data2477w[2..2]), (w_anode2827w[1..1] & (! w_data2477w[1..1])), (w_anode2827w[0..0] & w_data2477w[0..0]), w_anode2766w[2..2]);
	w_anode2837w[] = ( (w_anode2837w[2..2] & w_data2477w[2..2]), (w_anode2837w[1..1] & w_data2477w[1..1]), (w_anode2837w[0..0] & (! w_data2477w[0..0])), w_anode2766w[2..2]);
	w_anode2847w[] = ( (w_anode2847w[2..2] & w_data2477w[2..2]), (w_anode2847w[1..1] & w_data2477w[1..1]), (w_anode2847w[0..0] & w_data2477w[0..0]), w_anode2766w[2..2]);
	w_data2477w[2..0] = data_wire[2..0];
END;
--VALID FILE
