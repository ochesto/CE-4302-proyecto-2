--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone V" LPM_DECODES=21 LPM_WIDTH=5 data eq
--VERSION_BEGIN 18.1 cbx_cycloneii 2018:09:12:13:04:24:SJ cbx_lpm_add_sub 2018:09:12:13:04:24:SJ cbx_lpm_compare 2018:09:12:13:04:24:SJ cbx_lpm_decode 2018:09:12:13:04:24:SJ cbx_mgl 2018:09:12:13:10:36:SJ cbx_nadder 2018:09:12:13:04:24:SJ cbx_stratix 2018:09:12:13:04:24:SJ cbx_stratixii 2018:09:12:13:04:24:SJ  VERSION_END


-- Copyright (C) 2018  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details.



--synthesis_resources = lut 36 
SUBDESIGN decode_l2a
( 
	data[4..0]	:	input;
	eq[20..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	eq_node[20..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode2738w[2..0]	: WIRE;
	w_anode2752w[3..0]	: WIRE;
	w_anode2769w[3..0]	: WIRE;
	w_anode2779w[3..0]	: WIRE;
	w_anode2789w[3..0]	: WIRE;
	w_anode2799w[3..0]	: WIRE;
	w_anode2809w[3..0]	: WIRE;
	w_anode2819w[3..0]	: WIRE;
	w_anode2829w[3..0]	: WIRE;
	w_anode2841w[2..0]	: WIRE;
	w_anode2851w[3..0]	: WIRE;
	w_anode2862w[3..0]	: WIRE;
	w_anode2872w[3..0]	: WIRE;
	w_anode2882w[3..0]	: WIRE;
	w_anode2892w[3..0]	: WIRE;
	w_anode2902w[3..0]	: WIRE;
	w_anode2912w[3..0]	: WIRE;
	w_anode2922w[3..0]	: WIRE;
	w_anode2933w[2..0]	: WIRE;
	w_anode2943w[3..0]	: WIRE;
	w_anode2954w[3..0]	: WIRE;
	w_anode2964w[3..0]	: WIRE;
	w_anode2974w[3..0]	: WIRE;
	w_anode2984w[3..0]	: WIRE;
	w_anode2994w[3..0]	: WIRE;
	w_anode3004w[3..0]	: WIRE;
	w_anode3014w[3..0]	: WIRE;
	w_anode3025w[2..0]	: WIRE;
	w_anode3035w[3..0]	: WIRE;
	w_anode3046w[3..0]	: WIRE;
	w_anode3056w[3..0]	: WIRE;
	w_anode3066w[3..0]	: WIRE;
	w_anode3076w[3..0]	: WIRE;
	w_anode3086w[3..0]	: WIRE;
	w_anode3096w[3..0]	: WIRE;
	w_anode3106w[3..0]	: WIRE;
	w_data2736w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	eq[] = eq_node[];
	eq_node[20..0] = eq_wire[20..0];
	eq_wire[] = ( ( w_anode3106w[3..3], w_anode3096w[3..3], w_anode3086w[3..3], w_anode3076w[3..3], w_anode3066w[3..3], w_anode3056w[3..3], w_anode3046w[3..3], w_anode3035w[3..3]), ( w_anode3014w[3..3], w_anode3004w[3..3], w_anode2994w[3..3], w_anode2984w[3..3], w_anode2974w[3..3], w_anode2964w[3..3], w_anode2954w[3..3], w_anode2943w[3..3]), ( w_anode2922w[3..3], w_anode2912w[3..3], w_anode2902w[3..3], w_anode2892w[3..3], w_anode2882w[3..3], w_anode2872w[3..3], w_anode2862w[3..3], w_anode2851w[3..3]), ( w_anode2829w[3..3], w_anode2819w[3..3], w_anode2809w[3..3], w_anode2799w[3..3], w_anode2789w[3..3], w_anode2779w[3..3], w_anode2769w[3..3], w_anode2752w[3..3]));
	w_anode2738w[] = ( (w_anode2738w[1..1] & (! data_wire[4..4])), (w_anode2738w[0..0] & (! data_wire[3..3])), B"1");
	w_anode2752w[] = ( (w_anode2752w[2..2] & (! w_data2736w[2..2])), (w_anode2752w[1..1] & (! w_data2736w[1..1])), (w_anode2752w[0..0] & (! w_data2736w[0..0])), w_anode2738w[2..2]);
	w_anode2769w[] = ( (w_anode2769w[2..2] & (! w_data2736w[2..2])), (w_anode2769w[1..1] & (! w_data2736w[1..1])), (w_anode2769w[0..0] & w_data2736w[0..0]), w_anode2738w[2..2]);
	w_anode2779w[] = ( (w_anode2779w[2..2] & (! w_data2736w[2..2])), (w_anode2779w[1..1] & w_data2736w[1..1]), (w_anode2779w[0..0] & (! w_data2736w[0..0])), w_anode2738w[2..2]);
	w_anode2789w[] = ( (w_anode2789w[2..2] & (! w_data2736w[2..2])), (w_anode2789w[1..1] & w_data2736w[1..1]), (w_anode2789w[0..0] & w_data2736w[0..0]), w_anode2738w[2..2]);
	w_anode2799w[] = ( (w_anode2799w[2..2] & w_data2736w[2..2]), (w_anode2799w[1..1] & (! w_data2736w[1..1])), (w_anode2799w[0..0] & (! w_data2736w[0..0])), w_anode2738w[2..2]);
	w_anode2809w[] = ( (w_anode2809w[2..2] & w_data2736w[2..2]), (w_anode2809w[1..1] & (! w_data2736w[1..1])), (w_anode2809w[0..0] & w_data2736w[0..0]), w_anode2738w[2..2]);
	w_anode2819w[] = ( (w_anode2819w[2..2] & w_data2736w[2..2]), (w_anode2819w[1..1] & w_data2736w[1..1]), (w_anode2819w[0..0] & (! w_data2736w[0..0])), w_anode2738w[2..2]);
	w_anode2829w[] = ( (w_anode2829w[2..2] & w_data2736w[2..2]), (w_anode2829w[1..1] & w_data2736w[1..1]), (w_anode2829w[0..0] & w_data2736w[0..0]), w_anode2738w[2..2]);
	w_anode2841w[] = ( (w_anode2841w[1..1] & (! data_wire[4..4])), (w_anode2841w[0..0] & data_wire[3..3]), B"1");
	w_anode2851w[] = ( (w_anode2851w[2..2] & (! w_data2736w[2..2])), (w_anode2851w[1..1] & (! w_data2736w[1..1])), (w_anode2851w[0..0] & (! w_data2736w[0..0])), w_anode2841w[2..2]);
	w_anode2862w[] = ( (w_anode2862w[2..2] & (! w_data2736w[2..2])), (w_anode2862w[1..1] & (! w_data2736w[1..1])), (w_anode2862w[0..0] & w_data2736w[0..0]), w_anode2841w[2..2]);
	w_anode2872w[] = ( (w_anode2872w[2..2] & (! w_data2736w[2..2])), (w_anode2872w[1..1] & w_data2736w[1..1]), (w_anode2872w[0..0] & (! w_data2736w[0..0])), w_anode2841w[2..2]);
	w_anode2882w[] = ( (w_anode2882w[2..2] & (! w_data2736w[2..2])), (w_anode2882w[1..1] & w_data2736w[1..1]), (w_anode2882w[0..0] & w_data2736w[0..0]), w_anode2841w[2..2]);
	w_anode2892w[] = ( (w_anode2892w[2..2] & w_data2736w[2..2]), (w_anode2892w[1..1] & (! w_data2736w[1..1])), (w_anode2892w[0..0] & (! w_data2736w[0..0])), w_anode2841w[2..2]);
	w_anode2902w[] = ( (w_anode2902w[2..2] & w_data2736w[2..2]), (w_anode2902w[1..1] & (! w_data2736w[1..1])), (w_anode2902w[0..0] & w_data2736w[0..0]), w_anode2841w[2..2]);
	w_anode2912w[] = ( (w_anode2912w[2..2] & w_data2736w[2..2]), (w_anode2912w[1..1] & w_data2736w[1..1]), (w_anode2912w[0..0] & (! w_data2736w[0..0])), w_anode2841w[2..2]);
	w_anode2922w[] = ( (w_anode2922w[2..2] & w_data2736w[2..2]), (w_anode2922w[1..1] & w_data2736w[1..1]), (w_anode2922w[0..0] & w_data2736w[0..0]), w_anode2841w[2..2]);
	w_anode2933w[] = ( (w_anode2933w[1..1] & data_wire[4..4]), (w_anode2933w[0..0] & (! data_wire[3..3])), B"1");
	w_anode2943w[] = ( (w_anode2943w[2..2] & (! w_data2736w[2..2])), (w_anode2943w[1..1] & (! w_data2736w[1..1])), (w_anode2943w[0..0] & (! w_data2736w[0..0])), w_anode2933w[2..2]);
	w_anode2954w[] = ( (w_anode2954w[2..2] & (! w_data2736w[2..2])), (w_anode2954w[1..1] & (! w_data2736w[1..1])), (w_anode2954w[0..0] & w_data2736w[0..0]), w_anode2933w[2..2]);
	w_anode2964w[] = ( (w_anode2964w[2..2] & (! w_data2736w[2..2])), (w_anode2964w[1..1] & w_data2736w[1..1]), (w_anode2964w[0..0] & (! w_data2736w[0..0])), w_anode2933w[2..2]);
	w_anode2974w[] = ( (w_anode2974w[2..2] & (! w_data2736w[2..2])), (w_anode2974w[1..1] & w_data2736w[1..1]), (w_anode2974w[0..0] & w_data2736w[0..0]), w_anode2933w[2..2]);
	w_anode2984w[] = ( (w_anode2984w[2..2] & w_data2736w[2..2]), (w_anode2984w[1..1] & (! w_data2736w[1..1])), (w_anode2984w[0..0] & (! w_data2736w[0..0])), w_anode2933w[2..2]);
	w_anode2994w[] = ( (w_anode2994w[2..2] & w_data2736w[2..2]), (w_anode2994w[1..1] & (! w_data2736w[1..1])), (w_anode2994w[0..0] & w_data2736w[0..0]), w_anode2933w[2..2]);
	w_anode3004w[] = ( (w_anode3004w[2..2] & w_data2736w[2..2]), (w_anode3004w[1..1] & w_data2736w[1..1]), (w_anode3004w[0..0] & (! w_data2736w[0..0])), w_anode2933w[2..2]);
	w_anode3014w[] = ( (w_anode3014w[2..2] & w_data2736w[2..2]), (w_anode3014w[1..1] & w_data2736w[1..1]), (w_anode3014w[0..0] & w_data2736w[0..0]), w_anode2933w[2..2]);
	w_anode3025w[] = ( (w_anode3025w[1..1] & data_wire[4..4]), (w_anode3025w[0..0] & data_wire[3..3]), B"1");
	w_anode3035w[] = ( (w_anode3035w[2..2] & (! w_data2736w[2..2])), (w_anode3035w[1..1] & (! w_data2736w[1..1])), (w_anode3035w[0..0] & (! w_data2736w[0..0])), w_anode3025w[2..2]);
	w_anode3046w[] = ( (w_anode3046w[2..2] & (! w_data2736w[2..2])), (w_anode3046w[1..1] & (! w_data2736w[1..1])), (w_anode3046w[0..0] & w_data2736w[0..0]), w_anode3025w[2..2]);
	w_anode3056w[] = ( (w_anode3056w[2..2] & (! w_data2736w[2..2])), (w_anode3056w[1..1] & w_data2736w[1..1]), (w_anode3056w[0..0] & (! w_data2736w[0..0])), w_anode3025w[2..2]);
	w_anode3066w[] = ( (w_anode3066w[2..2] & (! w_data2736w[2..2])), (w_anode3066w[1..1] & w_data2736w[1..1]), (w_anode3066w[0..0] & w_data2736w[0..0]), w_anode3025w[2..2]);
	w_anode3076w[] = ( (w_anode3076w[2..2] & w_data2736w[2..2]), (w_anode3076w[1..1] & (! w_data2736w[1..1])), (w_anode3076w[0..0] & (! w_data2736w[0..0])), w_anode3025w[2..2]);
	w_anode3086w[] = ( (w_anode3086w[2..2] & w_data2736w[2..2]), (w_anode3086w[1..1] & (! w_data2736w[1..1])), (w_anode3086w[0..0] & w_data2736w[0..0]), w_anode3025w[2..2]);
	w_anode3096w[] = ( (w_anode3096w[2..2] & w_data2736w[2..2]), (w_anode3096w[1..1] & w_data2736w[1..1]), (w_anode3096w[0..0] & (! w_data2736w[0..0])), w_anode3025w[2..2]);
	w_anode3106w[] = ( (w_anode3106w[2..2] & w_data2736w[2..2]), (w_anode3106w[1..1] & w_data2736w[1..1]), (w_anode3106w[0..0] & w_data2736w[0..0]), w_anode3025w[2..2]);
	w_data2736w[2..0] = data_wire[2..0];
END;
--VALID FILE
